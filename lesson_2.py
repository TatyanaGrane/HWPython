# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
s = [123, 'abc', False, 15.86, 6]
for i in s:
    print(type(i))

# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов нужно использовать
# функцию input().
my_list = list(input("Enter elements: "))
for i in range(1, len(my_list) - 1, 2):
    my_list[i - 1], my_list[i] = my_list[i], my_list[i - 1]

print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и dict.

month_list = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']
year_dict = {1: 'зимним', 2: 'весенним', 3: 'летним', 4: 'осенним'}
num = int(input("Введите номер месяца (положительное число, больше 0): "))
if num <= 2:
    print(f"Месяц {month_list[num - 1]} явялется {year_dict.get(1)}.")
elif num <= 5:
    print(f"Месяц {month_list[num - 1]} явялется {year_dict.get(2)}.")
elif num <= 8:
    print(f"Месяц {month_list[num - 1]} явялется {year_dict.get(3)}.")
elif num <= 11:
    print(f"Месяц {month_list[num - 1]} явялется {year_dict.get(4)}.")
elif num == 12:
    print(f"Месяц {month_list[num - 1]} явялется {year_dict.get(1)}.")
else:
    print("Неверное значение: такого месяца нет.")

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове.
my_str = input("Enter your sentence: ")
b = my_str.split(" ")
b = list(b)
z = 1
for i in b:
    if len(i) <= 10:
        print(f"{z}. {i}")
    else:
        print(f"{z}. {i[0:10]}")
    z += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
rating = [7, 5, 3, 3, 2]
new_elem = float(input("Enter next element of rating: "))
q = 0
for i in rating:
    if new_elem <= i:
        q += 1
    else:
        break
rating.insert(q, new_elem)
print(rating)

# 6*. Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
# Тогда значение — список значений-характеристик, например, список названий товаров.
#
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]
# }
goods = []
param = {'название': '', 'цена': '', 'количество': '', 'единица измерения': ''}
analytics = {'название': [], 'цена': [], 'количество': [], 'единица измерения': []}
i = 0
while True:
    if input("Введите 'A' для завершения. Нажмите 'Enter' для продолжения: ").upper() == 'A':
        break
    i += 1
    param_copy = param.copy()
    for p in param:
        property = input(f"Введите значение параметра '{p}': ")
        param_copy[p] = int(property) if p == 'цена' or p == 'количество' else property
        analytics[p].append(param_copy[p])
    goods.append((i, param_copy))
    print(f"Номенклатура товаров: {goods}")
    print("Аналитика:")
    for key, value in analytics.items():
        print(f"{key}: {value}")